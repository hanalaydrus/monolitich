// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gatewayContract.proto

package gatewayContract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Typeofservice        string   `protobuf:"bytes,1,opt,name=typeofservice" json:"typeofservice,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gatewayContract_9a99728fa74cc00f, []int{0}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetTypeofservice() string {
	if m != nil {
		return m.Typeofservice
	}
	return ""
}

func (m *HelloRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// The response message containing the greetings
type HelloReply struct {
	Response             string   `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	Timestamp            string   `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Percentage           float32  `protobuf:"fixed32,3,opt,name=percentage" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_gatewayContract_9a99728fa74cc00f, []int{1}
}
func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (dst *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(dst, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *HelloReply) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *HelloReply) GetPercentage() float32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "gatewayContract.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "gatewayContract.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Greeter service

type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Greeter_SayHelloClient, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Greeter_SayHelloClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Greeter_serviceDesc.Streams[0], c.cc, "/gatewayContract.Greeter/SayHello", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayHelloClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_SayHelloClient interface {
	Recv() (*HelloReply, error)
	grpc.ClientStream
}

type greeterSayHelloClient struct {
	grpc.ClientStream
}

func (x *greeterSayHelloClient) Recv() (*HelloReply, error) {
	m := new(HelloReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Greeter service

type GreeterServer interface {
	// Sends a greeting
	SayHello(*HelloRequest, Greeter_SayHelloServer) error
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HelloRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).SayHello(m, &greeterSayHelloServer{stream})
}

type Greeter_SayHelloServer interface {
	Send(*HelloReply) error
	grpc.ServerStream
}

type greeterSayHelloServer struct {
	grpc.ServerStream
}

func (x *greeterSayHelloServer) Send(m *HelloReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gatewayContract.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SayHello",
			Handler:       _Greeter_SayHello_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gatewayContract.proto",
}

func init() {
	proto.RegisterFile("gatewayContract.proto", fileDescriptor_gatewayContract_9a99728fa74cc00f)
}

var fileDescriptor_gatewayContract_9a99728fa74cc00f = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x4d, 0x87, 0xba, 0x5e, 0xd4, 0x41, 0x40, 0x28, 0x9b, 0x4a, 0x29, 0x3e, 0xf4, 0xa9,
	0x88, 0x82, 0x1f, 0x60, 0x0a, 0x0e, 0xf1, 0x61, 0x44, 0x64, 0xcf, 0xb1, 0xbd, 0xab, 0x81, 0xb4,
	0x89, 0xc9, 0xd5, 0x99, 0xaf, 0xe3, 0x27, 0x95, 0x16, 0xff, 0xcc, 0xc1, 0xde, 0x92, 0xdf, 0x3d,
	0xf7, 0x5c, 0xce, 0x81, 0xe3, 0x5a, 0x12, 0xae, 0x64, 0xb8, 0x31, 0x2d, 0x39, 0x59, 0x52, 0x61,
	0x9d, 0x21, 0xc3, 0x47, 0x1b, 0x38, 0xbb, 0x85, 0x83, 0x19, 0x6a, 0x6d, 0x04, 0xbe, 0xbe, 0xa1,
	0x27, 0x7e, 0x0e, 0x87, 0x14, 0x2c, 0x9a, 0xa5, 0x47, 0xf7, 0xae, 0x4a, 0x4c, 0x58, 0xca, 0xf2,
	0x58, 0xfc, 0x87, 0xfc, 0x08, 0x22, 0x55, 0x25, 0x51, 0xca, 0xf2, 0x5d, 0x11, 0xa9, 0x2a, 0x5b,
	0x02, 0x7c, 0xbb, 0x58, 0x1d, 0xf8, 0x18, 0x86, 0x0e, 0xbd, 0x35, 0xad, 0xff, 0x59, 0xff, 0xfd,
	0xf3, 0x13, 0x88, 0x49, 0x35, 0xe8, 0x49, 0x36, 0xb6, 0x37, 0x88, 0xc5, 0x1f, 0xe0, 0x67, 0x00,
	0x16, 0x5d, 0x89, 0x2d, 0xc9, 0x1a, 0x93, 0x41, 0xca, 0xf2, 0x48, 0xac, 0x91, 0xcb, 0x27, 0xd8,
	0xbf, 0x73, 0x88, 0x84, 0x8e, 0xdf, 0xc3, 0xf0, 0x51, 0x86, 0xfe, 0x2a, 0x3f, 0x2d, 0x36, 0xd3,
	0xae, 0x67, 0x1a, 0x4f, 0xb6, 0x8d, 0xad, 0x0e, 0xd9, 0xce, 0x05, 0x9b, 0x5e, 0xc3, 0x44, 0x99,
	0xa2, 0x76, 0xb6, 0x2c, 0xf0, 0x43, 0x36, 0x56, 0xa3, 0x2f, 0x5e, 0x3a, 0xc9, 0xca, 0x38, 0x5d,
	0x4d, 0x47, 0xbd, 0x7c, 0xd1, 0xbd, 0xe7, 0x5d, 0x8b, 0x73, 0xf6, 0x19, 0x0d, 0x66, 0x0f, 0x8b,
	0xe7, 0xbd, 0xbe, 0xd4, 0xab, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xa4, 0x97, 0x32, 0x6d,
	0x01, 0x00, 0x00,
}
